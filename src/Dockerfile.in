# vim:ft=dockerfile
FROM ubuntu:16.04
MAINTAINER @MAINTAINER@

#
# Install required packages
#
RUN apt-get update && apt-get -y install \
 autoconf \
 automake \
 autopoint \
 c2hs \
 cabal-install \
 ca-certificates \
 curl \
 ghc \
 git \
 libtool \
 llvm-3.7 \
 p7zip-full \
 pkg-config \
 python \
 texinfo \
 unzip \
 zlib1g-dev

# Create a new user 'androidbuilder'
COPY root-scripts/create-androidbuilder-user.sh /root/
RUN /root/create-androidbuilder-user.sh

# Log-in to the new user
USER androidbuilder
ENV HOME /home/androidbuilder

# Set the working directory
ENV BASE $HOME/build

# The adding of the patches happens later in the Docker build, just before the
# patched code is built
RUN mkdir -p $BASE/patches

COPY user-scripts/set-env.sh $BASE/

WORKDIR $BASE

#
# Start preparing the environment.
#

ENV \
 NDK_API=@NDK_API@ \
 NDK_ARCH=@NDK_ARCH@ \
 NDK_PLATFORM=@NDK_PLATFORM@ \
 NDK_TOOLCHAIN=@NDK_TOOLCHAIN@ \
 NDK_TARGET=@NDK_TARGET@ \
 NDK_ABI=@NDK_ABI@ \
 ARCH_OPTS=@ARCH_OPTS@

COPY user-scripts/download-ndk.sh \
     user-scripts/install-ndk.sh \
     user-scripts/create-ndk-standalone-toolchain.sh \
     user-scripts/cleanup-ndk.sh \
     $BASE/
RUN ./download-ndk.sh \
 && ./install-ndk.sh \
 && ./create-ndk-standalone-toolchain.sh \
 && ./cleanup-ndk.sh

WORKDIR $HOME

#
# Now to add add some PATHs
#
ENV \
 PATH=$HOME/.cabal/bin:$HOME/.ndk/$NDK_PLATFORM/$NDK_TOOLCHAIN/bin:$PATH \
 PLATFORM_PREFIX=$HOME/.ndk/$NDK_PLATFORM/$NDK_TOOLCHAIN
